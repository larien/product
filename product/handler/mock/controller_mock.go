// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mock

import (
	context "context"

	entity "github.com/larien/product/product/entity"
	mock "github.com/stretchr/testify/mock"
)

// Mock is an autogenerated mock type for the Product's Controller type
type Mock struct {
	mock.Mock
}

// New creates a new instance of Controller mock
func New() *Mock {
	return &Mock{}
}

// List provides a mock function with given fields: ctx, userID
func (_m *Mock) List(ctx context.Context, userID string) ([]*entity.Product, error) {
	ret := _m.Called(ctx, userID)

	var r0 []*entity.Product
	if rf, ok := ret.Get(0).(func(context.Context, string) []*entity.Product); ok {
		r0 = rf(ctx, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entity.Product)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
